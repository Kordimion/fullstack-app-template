apiVersion: apps/v1
kind: Deployment
metadata: # this section describes the deployment itself (for kubectl CRUD operations)
  name: catalog-deployment # unique name of deployment object within namespace
  labels:
    app: catalog-api 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog-api  # tells what pods the deployment will apply to.
                        # for some reason, this is not automatic in k8s :P
  template: # this section describes pods in the deployment
    metadata: # metadata for pods
      labels:
        app: catalog-api
        app.kubernetes.io/name: catalog-api # connect pods to service
    spec: # pod image settings
      containers:
      - name: catalog-api
        image: catalogapi:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
spec:
  selector:
    app.kubernetes.io/name: catalog-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9376
---
apiVersion: apps/v1
kind: Deployment
metadata: # this section describes the deployment itself (for kubectl CRUD operations)
  name: frontend-deployment # unique name of deployment object within namespace
  labels:
    app: frontend-spa 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-spa  # tells what pods the deployment will apply to.
                        # for some reason, this is not automatic in k8s :P
  template: # this section describes pods in the deployment
    metadata: # metadata for pods
      labels:
        app: frontend-spa
        app.kubernetes.io/name: frontend-spa # connect pods to service
    spec: # pod image settings
      containers:
      - name: frontend-spa
        image: frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app.kubernetes.io/name: frontend-spa
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9377
---
apiVersion: apps/v1
kind: Deployment
metadata: # this section describes the deployment itself (for kubectl CRUD operations)
  name: sso-deployment # unique name of deployment object within namespace
  labels:
    app: sso 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sso  # tells what pods the deployment will apply to.
                        # for some reason, this is not automatic in k8s :P
  template: # this section describes pods in the deployment
    metadata: # metadata for pods
      labels:
        app: sso
        app.kubernetes.io/name: sso # connect pods to service
    spec: # pod image settings
      containers:
      - name: sso
        image: quay.io/keycloak/keycloak:latest
        imagePullPolicy: IfNotPresent
        command: ["start"]
        args: ["--db", "postgres", "--db-url-host", "kubernetes.docker.internal", "--db-password", "postgres"]
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: sso-service
spec:
  selector:
    app.kubernetes.io/name: sso
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9378
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - http:
        paths:
        - path: /identity
          pathType: Prefix
          backend:
            service:
              name: sso-service
              port:
                number: 8080
        - path: /api/catalog
          pathType: Prefix
          backend:
            service:
              name: catalog-service
              port:
                number: 80
        - path: /
          pathType: Prefix
          backend:
            service:
              name: frontend-service
              port:
                number: 80